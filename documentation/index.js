Index.PACKAGES = {"com" : [], "com.github" : [], "com.github.jsaule" : [{"name" : "com.github.jsaule.ScalaTicTacToe", "shortDescription" : "creates framework for the Tic Tac Toe game", "object" : "com\/github\/jsaule\/ScalaTicTacToe$.html", "members_class" : [{"label" : "checkWin", "tail" : "(board: Array[Char]): Boolean", "member" : "com.github.jsaule.ScalaTicTacToe.checkWin", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#checkWin(board:Array[Char]):Boolean", "kind" : "def"}, {"label" : "printBoard", "tail" : "(board: Array[Char]): Unit", "member" : "com.github.jsaule.ScalaTicTacToe.printBoard", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#printBoard(board:Array[Char]):Unit", "kind" : "def"}, {"label" : "nextPlayer", "tail" : "(board: Array[Char]): Char", "member" : "com.github.jsaule.ScalaTicTacToe.nextPlayer", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#nextPlayer(board:Array[Char]):Char", "kind" : "def"}, {"label" : "moveInput", "tail" : "(board: Array[Char]): Int", "member" : "com.github.jsaule.ScalaTicTacToe.moveInput", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#moveInput(board:Array[Char]):Int", "kind" : "def"}, {"label" : "computerInput", "tail" : "(board: Array[Char]): Int", "member" : "com.github.jsaule.ScalaTicTacToe.computerInput", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#computerInput(board:Array[Char]):Int", "kind" : "def"}, {"label" : "nextTurn", "tail" : "(board: Array[Char]): Unit", "member" : "com.github.jsaule.ScalaTicTacToe.nextTurn", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#nextTurn(board:Array[Char]):Unit", "kind" : "def"}, {"label" : "winningSets", "tail" : ": Set[Set[Int]]", "member" : "com.github.jsaule.ScalaTicTacToe.winningSets", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#winningSets:Set[Set[Int]]", "kind" : "val"}, {"label" : "emptyBoard", "tail" : ": Array[Char]", "member" : "com.github.jsaule.ScalaTicTacToe.emptyBoard", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#emptyBoard:Array[Char]", "kind" : "val"}, {"label" : "inputNameTwo", "tail" : ": String", "member" : "com.github.jsaule.ScalaTicTacToe.inputNameTwo", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#inputNameTwo:String", "kind" : "var"}, {"label" : "playerTwo", "tail" : ": String", "member" : "com.github.jsaule.ScalaTicTacToe.playerTwo", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#playerTwo:String", "kind" : "val"}, {"label" : "playerOne", "tail" : ": String", "member" : "com.github.jsaule.ScalaTicTacToe.playerOne", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#playerOne:String", "kind" : "val"}, {"label" : "inputXO", "tail" : ": String", "member" : "com.github.jsaule.ScalaTicTacToe.inputXO", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#inputXO:String", "kind" : "val"}, {"label" : "inputNameOne", "tail" : ": String", "member" : "com.github.jsaule.ScalaTicTacToe.inputNameOne", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#inputNameOne:String", "kind" : "val"}, {"member" : "com.github.jsaule.ScalaTicTacToe#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/jsaule\/ScalaTicTacToe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "game", "tail" : ": ScalaTicTacToe", "member" : "com.github.jsaule.ScalaTicTacToe.game", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#game:com.github.jsaule.ScalaTicTacToe", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/jsaule\/ScalaTicTacToe$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/jsaule\/ScalaTicTacToe.html", "kind" : "class"}, {"name" : "com.github.jsaule.WinnersLosersDB", "shortDescription" : "creates new database (if it doesn't exist) and imports game results", "members_class" : [{"label" : "insertDrawResults", "tail" : "(playerOneName: String, playerTwoName: String): Unit", "member" : "com.github.jsaule.WinnersLosersDB.insertDrawResults", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#insertDrawResults(playerOneName:String,playerTwoName:String):Unit", "kind" : "def"}, {"label" : "migrateDraw", "tail" : "(): Unit", "member" : "com.github.jsaule.WinnersLosersDB.migrateDraw", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#migrateDraw():Unit", "kind" : "def"}, {"label" : "insertResults", "tail" : "(winnerName: String, loserName: String): Unit", "member" : "com.github.jsaule.WinnersLosersDB.insertResults", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#insertResults(winnerName:String,loserName:String):Unit", "kind" : "def"}, {"label" : "migrate", "tail" : "(): Unit", "member" : "com.github.jsaule.WinnersLosersDB.migrate", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#migrate():Unit", "kind" : "def"}, {"label" : "connect", "tail" : ": Connection", "member" : "com.github.jsaule.WinnersLosersDB.connect", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#connect:java.sql.Connection", "kind" : "val"}, {"label" : "url", "tail" : ": String", "member" : "com.github.jsaule.WinnersLosersDB.url", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#url:String", "kind" : "val"}, {"member" : "com.github.jsaule.WinnersLosersDB#<init>", "error" : "unsupported entity"}, {"label" : "dbPath", "tail" : ": String", "member" : "com.github.jsaule.WinnersLosersDB.dbPath", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#dbPath:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/jsaule\/WinnersLosersDB.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/jsaule\/WinnersLosersDB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/jsaule\/WinnersLosersDB.html", "kind" : "class"}]};